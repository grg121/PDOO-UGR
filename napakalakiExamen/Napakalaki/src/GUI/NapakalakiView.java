/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import NapakalakiGame.CombatResult;
import NapakalakiGame.Napakalaki ; 
import NapakalakiGame.Treasure;
import NapakalakiGame.TreasureKind;

/**
 *
 * @author pinguino
 */
public class NapakalakiView extends javax.swing.JFrame {
    
    private boolean combatido = false ; 

    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
        this.nextTurn.setEnabled(false);
        this.combatButtom.setEnabled(false) ; 
        this.useJoker.setEnabled(false) ; 
    }
    
    public void setVisibleMonster(boolean bol){
        this.monster.setVisible(bol);
    }
    
    private Napakalaki napakalakiModel ; 
    
    public void setNapakalaki(Napakalaki newn){
        napakalakiModel = newn ; 
        this.monster.setMonster(newn.getCurrentMonster());
        this.player.setPlayer(newn.getCurrentPlayer());
        this.player.setNapakalakiModel(napakalakiModel) ; 
        this.player.setNpkvModel(this) ; 
        if(this.napakalakiModel.is_joker(this.napakalakiModel.getCurrentPlayer().getVisibleTreasures()))
                this.useJoker.setEnabled(true);
        repaint() ; 
    }
    
    public void enableNextTurn(){
        if( combatido )
            this.nextTurn.setEnabled(true);
    }
    
    public void enableUseJoker(boolean mode){
            this.useJoker.setEnabled(mode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        player = new GUI.PlayerView();
        monster = new GUI.MonsterView();
        meetTheMonster = new javax.swing.JButton();
        combatButtom = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();
        combatResult = new javax.swing.JLabel();
        useJoker = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.black);

        meetTheMonster.setText("Meet the Monster");
        meetTheMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetTheMonsterActionPerformed(evt);
            }
        });

        combatButtom.setText("Combat");
        combatButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatButtomActionPerformed(evt);
            }
        });

        nextTurn.setText("Next Turn");
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });

        combatResult.setFont(new java.awt.Font("Ubuntu", 1, 48)); // NOI18N

        useJoker.setText("USE JOKER");
        useJoker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useJokerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combatResult)
                .addGap(371, 371, 371))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(meetTheMonster, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combatButtom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nextTurn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(useJoker, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(305, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(monster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combatResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(useJoker)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(meetTheMonster)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combatButtom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextTurn)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combatButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatButtomActionPerformed
        // TODO add your handling code here:
        this.combatButtom.setEnabled(false);
        combatido = true ; 
        CombatResult combatResult = napakalakiModel.developCombat();
          switch (combatResult) {
            case WINGAME : 
              this.combatResult.setText(napakalakiModel.getCurrentPlayer().getName() + " HA GANADO LA PARTIDA.") ; 
              break;
            case WIN :
               this.combatResult.setText(napakalakiModel.getCurrentPlayer().getName() + " HA GANADO EL COMBATE.") ; 
               if(napakalakiModel.getCurrentPlayer().validState())
                    this.nextTurn.setEnabled(true);
               this.setNapakalaki(napakalakiModel);
              break;
            case LOSE :
               this.combatResult.setText(napakalakiModel.getCurrentPlayer().getName() + " NO SE HA CONVERTIDO.") ; 
               this.player.mostrarPending(true); 
               if(napakalakiModel.getCurrentPlayer().validState())
                    this.nextTurn.setEnabled(true);
               this.setNapakalaki(napakalakiModel);
              break;
            case LOSEANDCONVERT:
                 this.combatResult.setText(napakalakiModel.getCurrentPlayer().getName() + " SE HA CONVERTIDO.") ; 
                 this.player.mostrarPending(true); 
                 if(napakalakiModel.getCurrentPlayer().validState())
                    this.nextTurn.setEnabled(true);
                 this.setNapakalaki(napakalakiModel);
                break;
          }
          this.combatResult.setVisible(true);
    }//GEN-LAST:event_combatButtomActionPerformed

    private void meetTheMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetTheMonsterActionPerformed
        // TODO add your handling code here:
        setVisibleMonster(true) ; 
        this.combatButtom.setEnabled(true) ;
        this.meetTheMonster.setEnabled(false) ; 
    }//GEN-LAST:event_meetTheMonsterActionPerformed

    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
        // TODO add your handling code here:
        if(napakalakiModel.nextTurn()){
            setNapakalaki(napakalakiModel) ; 
            this.nextTurn.setEnabled(false);
            this.useJoker.setEnabled(false);
            this.monster.setVisible(false) ; 
            this.meetTheMonster.setEnabled(true);
            this.combatResult.setVisible(false);
            combatido = false ; 
            this.player.mostrarPending(false);
        }
    }//GEN-LAST:event_nextTurnActionPerformed

    private void useJokerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useJokerActionPerformed
        // TODO add your handling code here:
        this.useJoker.setEnabled(false);
         this.nextTurn.setEnabled(true);
        for(Treasure tesoro : napakalakiModel.getCurrentPlayer().getVisibleTreasures())
            if(tesoro.getType() == TreasureKind.JOKER)
                napakalakiModel.getCurrentPlayer().discardVisibleTreasure(tesoro);
        this.napakalakiModel.getCurrentPlayer().freeBadConsequence(); 
        this.setNapakalaki(napakalakiModel);
    }//GEN-LAST:event_useJokerActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void showView() {
           this.setVisible(true) ; 
       }
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combatButtom;
    private javax.swing.JLabel combatResult;
    private javax.swing.JButton meetTheMonster;
    private GUI.MonsterView monster;
    private javax.swing.JButton nextTurn;
    private GUI.PlayerView player;
    private javax.swing.JButton useJoker;
    // End of variables declaration//GEN-END:variables
}
